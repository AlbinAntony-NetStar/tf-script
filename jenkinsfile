pipeline {
agent any
tools {
  terraform 'terraform'
}
properties([parameters([choice(choices: ['plan', 'apply', 'destroy-plan', 'destroy'], description: 'Please Select the Action', name: 'Action')])])
 stages { 
   stage ('Checkout Repo & TF init') { 
     steps { 
       cleanWs()
       sh  '''
       git clone https://github.com/AlbinAntony-NetStar/tf-script.git
       cd tf-script/ECR/dev-ecr/
       terraform init
       '''
      }
      } 
 stage ('TF plan') { 
 // only execute stage if apply is desired
    when { expression { return env.Action == 'plan' } }
    steps {
   sh '''
   cd tf-script/ECR/dev-ecr/
   terraform plan -out=tfplan.out
   ''' 
   }
   }
stage('TF Apply') {
    // only execute stage if apply is desired
    when { expression { return env.Action == 'apply' } }
    steps {
      // query for user approval of plan
      input(message: 'Click "proceed" to approve the above Terraform Plan')
      // apply the plan if approved
    sh '''
    cd tf-script/ECR/dev-ecr/
    terraform apply "tfplan.out"
    ''' 
    }

        }
stage('TF Destroy Plan') {
    // only execute stage if apply is desired
    when { expression { return env.Action == 'destroy-plan' } }
    steps {
    sh '''
    cd tf-script/ECR/dev-ecr/
    terraform plan -destroy
    ''' 
    }

        }

stage('TF Destroy') {
    // only execute stage if apply is desired
    when { expression { return env.Action == 'destroy' } }
    steps {
      // query for user approval of plan
      input(message: 'Click "proceed" to approve the above Terraform Plan')
      // apply the plan if approved
    sh '''
    cd tf-script/ECR/dev-ecr/
    terraform destroy --auto-approve
    ''' 
    }

        }
 }
}